name: Install Godot
description: Install Godot
inputs:
  version:
    description: NuGet name
    required: true
  dotnet:
    description: Use .NET build
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    # 4.3.0-beta.2 -> 4.3.beta2
    # https://github.com/godotengine/godot-builds/releases/download/4.3-beta2/Godot_v4.3-beta2_export_templates.tpz
    - if: contains(inputs.version, 'beta')
      id: vars
      shell: bash
      run: |
        gdver_full=$(echo ${{ inputs.version }} | sed 's:0-::' | sed 's:beta\.:beta:')
        echo "gdver_full=$gdver_full" >> $GITHUB_OUTPUT
        gdver_url=$(echo ${{ inputs.version }} | sed 's:0-:-:' | sed 's:beta\.:beta:')
        templates_url="https://github.com/godotengine/godot-builds/releases/download/${gdver_url}/Godot_v${gdver_full}_export_templates.tpz"
        echo "templates_url=$templates_url" >> $GITHUB_OUTPUT

    # 4.2.2 -> 4.2.2.stable
    # https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_export_templates.tpz
    - if: "!contains(inputs.version, 'beta')"
      id: vars
      shell: bash
      run: |
        gdver_full=${{ inputs.version }}.stable
        echo "gdver_full=$gdver_full" >> $GITHUB_OUTPUT
        gdver_url=${{ inputs.version }}-stable
        templates_url="https://github.com/godotengine/godot/releases/download/${gdver_url}/Godot_v${gdver_url}_export_templates.tpz"
        echo "templates_url=$templates_url" >> $GITHUB_OUTPUT

    - if: runner.os == 'Linux'
      id: osvars
      shell: bash
      run: |
        echo "templates_path=\"$HOME/.local/share/godot/export_templates\"" >> $GITHUB_OUTPUT

    - if: runner.os == 'macOS'
      id: osvars
      shell: bash
      run: |
        echo "templates_path=\"$HOME/Library/Application Support/Godot/export_templates\"" >> $GITHUB_OUTPUT

    - if: runner.os == 'Windows'
      id: osvars
      shell: bash
      run: |
        choco install wget
        echo "templates_path=\"$APPDATA/Godot/export_templates\"" >> $GITHUB_OUTPUT

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install Godot
      if: "!inputs.dotnet"
      shell: bash
      run: |
        dotnet tool install --global Chickensoft.GodotEnv
        godotenv godot install ${{ inputs.version }} --no-dotnet
        echo "GODOT=$(godotenv godot env path)" >> $GITHUB_ENV

    - name: Install Godot (.NET)
      if: inputs.dotnet
      shell: bash
      run: |
        dotnet tool install --global Chickensoft.GodotEnv
        godotenv godot install ${{ inputs.version }}
        echo "GODOT=$(godotenv godot env path)" >> $GITHUB_ENV

    - name: Download export templates
      shell: bash
      run: |
        mkdir -p "${{ steps.osvars.templates_path }}"
        cd "${{ steps.osvars.templates_path }}"
        wget -q ${{ steps.vars.templates_url }}
        unzip *.tpz
        rm *.tpz
        mv templates ${{ steps.vars.gdver_full }}
        pwd
        ls -R
